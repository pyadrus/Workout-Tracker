from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from aiogram.types.web_app_info import WebAppInfo


def generate_user_options_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ—Ç–æ–º.

    :return: –û–±—ä–µ–∫—Ç ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞.
    """

    kb = [
        [
            InlineKeyboardButton(
                text="üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
                callback_data="registration",
            ),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
            InlineKeyboardButton(
                text="‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ",
                callback_data="description",
            ),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.
        ]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def generate_authorized_user_options_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ—Ç–æ–º.

    :return: –û–±—ä–µ–∫—Ç ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞.
    """

    kb = [
        [
            InlineKeyboardButton(
                text="‚öôÔ∏è –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
                callback_data="personal_account",
            ),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
            InlineKeyboardButton(
                text="‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ",
                callback_data="description",
            ),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.
        ],
        [
            InlineKeyboardButton(
                text="üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
                callback_data="feedback",
            ),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
            InlineKeyboardButton(
                text="üè† –í –±–æ—Ç–∞",
                web_app=WebAppInfo(url="https://c667-109-254-149-114.ngrok-free.app/"),
            ),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.
        ],
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def generate_keyboard_personal_account() -> InlineKeyboardMarkup:
    """
    :return: –û–±—ä–µ–∫—Ç ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞.
    """

    kb = [
        [
            InlineKeyboardButton(
                text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö",
                callback_data="view_data",
            ),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥",
                callback_data="back",
            ),
        ],  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def create_data_change_buttons() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ—Ç–æ–º.

    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞.
    """

    kb = [
        [
            InlineKeyboardButton(text="üë§ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="update_name"),
            InlineKeyboardButton(
                text="üìè –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ—Å—Ç", callback_data="update_height"
            ),
        ],
        [
            InlineKeyboardButton(text="‚öñÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –≤–µ—Å", callback_data="update_weight"),
            InlineKeyboardButton(
                text="üèãÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø—ã—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
                callback_data="update_training_experience",
            ),
        ],
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥",
                callback_data="back_personal_account",
            ),
        ],
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


if __name__ == "__main__":
    generate_user_options_keyboard()
    generate_authorized_user_options_keyboard()
    generate_keyboard_personal_account()
    create_data_change_buttons()
