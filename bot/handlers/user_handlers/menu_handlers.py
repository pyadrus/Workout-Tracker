from aiogram import types, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from loguru import logger

from bot.keyboards.keyboard_user.keyboard_menu import keyboard_menu
from system.dispatcher import bot
from system.dispatcher import router


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def start_handler(message: Message) -> None:
    try:

        user_id = message.from_user.id
        user_name = message.from_user.username or ""
        user_first_name = message.from_user.first_name or ""
        user_last_name = message.from_user.last_name or ""
        user_date = message.date.strftime("%Y-%m-%d %H:%M:%S")

        logger.info(f"User Info: {user_id}, {user_name}, {user_first_name}, {user_last_name}, {user_date}")

        menu_text = ("–ü—Ä–∏–≤–µ—Ç! üí™ –Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –≤ –º–∏—Ä–µ —Å–ø–æ—Ä—Ç–∞! üöÄ\n\n"

                     "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"

                     "–ù–µ–≤–∞–∂–Ω–æ, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã —É–≤–µ–ª–∏—á–∏—Ç—å —Å–∏–ª—É, —É–ª—É—á—à–∏—Ç—å –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ñ–æ—Ä–º—É ‚Äî —è "
                     "–∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å! –ù–∞—á–Ω—ë–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É? üòé")

        await message.answer(menu_text, reply_markup=keyboard_menu())
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start: {e}")


@router.callback_query(F.data == "start_handler")
async def start_handler_callback(callback_query: types.CallbackQuery) -> None:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    try:
        user_id = callback_query.from_user.id
        user_name = callback_query.from_user.username or ""
        user_first_name = callback_query.from_user.first_name or ""
        user_last_name = callback_query.from_user.last_name or ""
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞—Ç—É –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_date = callback_query.message.date.strftime("%Y-%m-%d %H:%M:%S")

        logger.info(f"User Info: {user_id}, {user_name}, {user_first_name}, {user_last_name}, {user_date}")

        menu_text = ("–ü—Ä–∏–≤–µ—Ç! üí™ –Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –≤ –º–∏—Ä–µ —Å–ø–æ—Ä—Ç–∞! üöÄ\n\n"

                     "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"

                     "–ù–µ–≤–∞–∂–Ω–æ, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã —É–≤–µ–ª–∏—á–∏—Ç—å —Å–∏–ª—É, —É–ª—É—á—à–∏—Ç—å –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ñ–æ—Ä–º—É ‚Äî —è "
                     "–∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å! –ù–∞—á–Ω—ë–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É? üòé")

        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
        await bot.send_message(
            chat_id=callback_query.message.chat.id,
            text=menu_text,
            reply_markup=keyboard_menu()  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è keyboard_menu() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")


def register_start_handler_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –±–æ—Ç–∞"""
    router.message.register(start_handler)  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
    router.callback_query.register(start_handler_callback)  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
