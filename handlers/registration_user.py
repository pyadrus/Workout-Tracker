from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery

from data.text import (  # –ò–º–ø–æ—Ä—Ç—ã —Ç–µ–∫—Å—Ç–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è.
    text_description,
    text_hello_welcome,
    text_authorized_user_greeting,
)
from database.database import (
    add_users,  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    get_user_data,  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
    update_user_data,  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
)
from keyboards.keyboards import (
    generate_user_options_keyboard,  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    generate_keyboard_personal_account,
    generate_authorized_user_options_keyboard,
    create_data_change_buttons,
)

routerrrr = Router()  # –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π.


class Registration(StatesGroup):
    name = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏.
    height = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞.
    weight = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –≤–µ—Å–∞.
    training_experience = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –æ–ø—ã—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.


class ChangeData(StatesGroup):
    name = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏.
    height = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞.
    weight = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –≤–µ—Å–∞.
    training_experience = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –æ–ø—ã—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", –Ω–∞—á–∏–Ω–∞—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
@routerrrr.message(F.text.lower() == "üìù —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
async def registration(message: Message, state: FSMContext) -> None:
    """
    –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—Å—Ç–æ–º "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è".
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
    """
    await state.set_state(Registration.name)
    await message.answer("‚úçÔ∏è –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
@routerrrr.message(Registration.name)
async def get_name(message: Message, state: FSMContext) -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–æ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–º–µ–Ω–µ–º.
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
    """
    await state.update_data(name=message.text)
    await state.set_state(Registration.height)
    await message.answer("üìè –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
@routerrrr.message(Registration.height)
async def get_height(message: Message, state: FSMContext) -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ—Å—Ç–æ–º.
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
    """
    await state.update_data(height=message.text)
    await state.set_state(Registration.weight)
    await message.answer("‚öñÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–≤–æ–¥–∞ –≤–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
@routerrrr.message(Registration.weight)
async def get_training_experience(message: Message, state: FSMContext) -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ–ø—ã—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –≤–µ—Å–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–µ—Å–æ–º.
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
    """
    await state.update_data(weight=message.text)
    await state.set_state(Registration.training_experience)
    await message.answer("üèãÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–≤–æ–¥–∞ –æ–ø—ã—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –∑–∞–≤–µ—Ä—à–∞—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
@routerrrr.message(Registration.training_experience)
async def registration_info(message: Message, state: FSMContext) -> None:
    """
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã–µ.
    –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–ø—ã—Ç–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
    """
    await state.update_data(training_experience=message.text)
    user_data = await state.get_data()
    await message.answer(
        f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!\n\n"
        f"‚úÖ –î–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n"
        f"üë§ –ò–º—è - {user_data['name']}\n"
        f"üìè –†–æ—Å—Ç - {user_data['height']} —Å–º\n"
        f"‚öñÔ∏è –í–µ—Å - {user_data['weight']} –∫–≥\n"
        f"üèãÔ∏è –û–ø—ã—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - {user_data['training_experience']}",
        reply_markup=generate_authorized_user_options_keyboard(),
    )
    username = message.from_user.username
    add_users(
        username,
        user_data["name"],
        user_data["height"],
        user_data["weight"],
        user_data["training_experience"],
    )

    await state.clear()  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
